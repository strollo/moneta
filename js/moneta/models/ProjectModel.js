/**
 * Model for Entries (expenses, incomes, transfers...)
 */
Ext.define('moneta.model.Project', {
	extend: 'Ext.data.Model',
	requires: ['Ext.data.UuidGenerator'],
	
	// For auto-generating form for new entries
	crud: {
		url: moneta.Globals.data.DATA_PROJECTS + '?',
		id: 'moneta.forms.NewProject',
		title: 'Insert New Project',
	},	
	idProperty: 'id',		
	fields:[		
		{name: 'id', type: 'number', 
			GridOptions: {skip: true},
			FormOptions: {skip: true}
		}, // Autogenerated ID
		{name: 'name', type: 'string',
			GridOptions: {text: "Project", width: 320, sortable: false, flex: true, editable: true},
			FormOptions: {
				fieldLabel: 'Project',
				allowBlank: false
			}
		},
	    {name: 'dbhost', type: 'string', 
			GridOptions: {text: "Host", width: 100, sortable: true,  editable: true},
			FormOptions: {
				fieldLabel: 'Host',
				allowBlank: false,
				defaultValue: '127.0.0.1',
			}
		},
	    {name: 'dbport', type: 'number', 
			GridOptions: {width: 80, text: "Port", width: 70, align: 'left', sortable: true, editable: true},
			FormOptions: {
				fieldLabel: 'Port',
				allowBlank: false,
				defaultValue: '3306',
			}
		},
		{name: 'dbuser', type: 'string', 
			GridOptions: {width: 100, text: "User", width: 70, align: 'left', sortable: true, editable: true},
			FormOptions: {
				fieldLabel: 'User',
				allowBlank: false,				
			}
		},
		{name: 'dbpassword', type: 'string',
			GridOptions: {width: 100, text: "Password", width: 70, align: 'left', sortable: true, editable: true, inputType: 'password',
				renderer: function(value) {
					return '&lt;Hidden Pwd&gt;';
				}
			},
			FormOptions: {
				fieldLabel: 'Password',
				allowBlank: false,
			}
		},	
	],
});