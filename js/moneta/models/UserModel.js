

Ext.Loader.setConfig({enabled: true});


/**
 * Model for Entries (expenses, incomes, transfers...)
 */
Ext.define('moneta.model.User', {
	extend: 'Ext.data.Model',

	// For auto-generating form for new entries
	crud: {
		url: moneta.Globals.data.DATA_USERS + '?',
		id: 'moneta.forms.NewUser',
		title: 'Insert New User',
	},
	
	idProperty: 'id',
	fields:[
		{name: 'id', type: 'number', 			
			Defaults: {
				skip: true,
			},
		}, // Autogenerated ID
		{name: 'user', type: 'string', 
			GridOptions: {defaultValue: 'user', text: "User", width: 120, editable: true},
			FormOptions: {
				fieldLabel: 'User',
				allowBlank: false,
			}
		},
		{name: 'password', type: 'string', 
			GridOptions: {
				defaultValue: 'password', text: "Password", width: 120, editable: true, 
				renderer: function(value) {
					return '&lt;Hidden Pwd&gt;';
				}
			},
			FormOptions: {
				skip: false,
				fieldLabel: 'Password',
				allowBlank: false,
				inputType: 'password',
			}
		}, // password
		{name: 'email',  type: 'string',
			GridOptions: {
				defaultValue: 'user@localhost', text: "EMail", width: 120, editable: true
			}
		},
		{name: 'isAdmin', type: 'boolean',
			Defaults: {
				editor: {xtype: 'checkboxfield'},
				fieldLabel: 'Admin',
			},
 
			GridOptions: {
				defaultValue: 'false', text: "Admin", width: 40, sortable: false, 
			},
		},
		{name: 'projects', type: 'string',
			Defaults: {
				editor: {
					/* JSON DATA INSIDE COMBOBox with multiselection enabled */
					xtype: 'smartcombobox',
					fields: ['id','name'],
					url: moneta.Globals.data.DATA_AVAILABLE_PROJECTS,
					valueField: 'name',
					displayField: 'name',
					multiSelect: true
				},
			},
			GridOptions: {
				defaultValue: '*',  width: 320, text: "Projects", width: 70, align: 'left', sortable: true, flex: 1,
			},
			FormOptions: {
				fieldLabel: "Projects",
				defaultValue: '*',
				allowBlank: false
			}
		}
	],
});